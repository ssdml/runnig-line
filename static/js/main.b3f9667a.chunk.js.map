{"version":3,"sources":["components/Square.js","components/Colomn.js","components/RunningLine.js","App.js","registerServiceWorker.js","index.js"],"names":["Square","props","withoutBorderWidth","width","innerSquareWidth","react_default","a","createElement","x","y","height","fill","stroke","color","strokeWidth","Colomn","squares","i","numRows","push","components_Square","key","disanceY","colors","RunningLine","colomns","map","current","index","components_Colomn","length","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initNextColomns","bind","assertThisInitialized","defaultColomn","state","_this2","setInterval","toConsumableArray","nextColomn","nextColomns","pop","shift","setState","reverse","version","viewBox","preserveAspectRatio","components_RunningLine","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b3f9667a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Square = (props) => {\n    const borderWidth = 2;\n    const withoutBorderWidth = props.width - borderWidth;\n    const whiteSpaceWidth = 3;\n    const innerSquareWidth = withoutBorderWidth - 2 * whiteSpaceWidth;\n    return (\n        <g>\n            <rect\n                x={props.x}\n                y={props.y}\n                width={withoutBorderWidth}\n                height={withoutBorderWidth}\n                fill=\"white\"\n                stroke={props.color}\n                strokeWidth={borderWidth}\n            />\n            <rect\n                x={1 * props.x + whiteSpaceWidth}\n                y={1 * props.y + whiteSpaceWidth}\n                width={innerSquareWidth}\n                height={innerSquareWidth}\n                fill={props.color}\n            />\n        </g>\n    );\n}\n\nexport default Square;","import React, { Component } from 'react';\nimport Square from './Square'\n\nconst Colomn = (props) => {\n    const squares = [];\n    for (let i = 0; i < props.numRows; i++) {\n        squares.push(\n            <Square\n                key={i}\n                x={props.x}\n                y={1 * props.y + (1 * props.width + 1 * props.disanceY) * i}\n                width={props.width}\n                color={props.colors[i]}\n            />\n        );\n    }\n    return (\n        <g>\n            {squares}\n        </g>\n    );\n}\n\nexport default Colomn;","import React, { Component } from 'react';\nimport Colomn from './Colomn'\n\nconst RunningLine = (props) => {\n    const x = 10;\n    const y = 10;\n    const distance = 3;\n    const width = 20;\n\n    const colomns = props.colors.map((current, index) => {\n        return (\n            <Colomn\n                key={index}\n                x={x + index * (1 * width + distance)}\n                y={y}\n                width={width}\n                disanceY={distance}\n                numRows={current.length}\n                colors={current}\n            />\n        );\n    });\n    return (\n        <g>\n            {colomns}\n        </g>\n    );\n}\n\nexport default RunningLine;","import React, { Component } from 'react';\nimport RunningLine from './components/RunningLine';\n\nclass App extends Component {\n  constructor () {\n    super();\n\n    this.initNextColomns = this.initNextColomns.bind(this);\n\n    this.initNextColomns();\n    this.defaultColomn = [\n      \"#ddd\",\n      \"#ddd\",\n      \"#ddd\",\n      \"#ddd\",\n      \"#ddd\",\n    ];\n\n    const colors = [];\n    for (let i = 0; i < 30; i++) {\n      colors.push(this.defaultColomn);\n    }\n    this.state = {colors:  colors};\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const colors = [...this.state.colors];\n      const nextColomn = this.nextColomns.pop();\n      colors.shift();\n      colors.push(nextColomn ? nextColomn : this.defaultColomn);\n      this.setState({colors: colors});\n    }, 100);\n  }\n\n  initNextColomns() {\n\n  // Привет!\n\n  //   this.nextColomns = [\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n  //     [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#ddd\"],\n  //     [\"#000\", \"#000\", \"#ddd\", \"#ddd\", \"#ddd\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#000\", \"#ddd\"],\n  //     [\"#ddd\", \"#ddd\", \"#000\", \"#ddd\", \"#ddd\"],\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#000\"],\n  //     [\"#000\", \"#000\", \"#ddd\", \"#000\", \"#000\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#000\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n  //     [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n  //     [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n  //     [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n  //     [\"#000\", \"#000\", \"#000\", \"#ddd\", \"#000\"],\n  //   ].reverse();\n  // }\n\n  // HELLO!\n  this.nextColomns = [\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#000\", \"#ddd\", \"#ddd\"],\n    [\"#ddd\", \"#ddd\", \"#000\", \"#ddd\", \"#ddd\"],\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#000\"],\n    [\"#000\", \"#ddd\", \"#000\", \"#ddd\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#000\", \"#ddd\", \"#ddd\", \"#ddd\", \"#000\"],\n    [\"#000\", \"#000\", \"#000\", \"#000\", \"#000\"],\n    [\"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\", \"#ddd\"],\n\n    [\"#000\", \"#000\", \"#000\", \"#ddd\", \"#000\"],\n  ].reverse();\n}\n\n  render() {\n    return (\n      <svg width=\"1000\" height=\"400\" version=\"1.1\"\n        viewBox=\"0 0 1000 400\" preserveAspectRatio=\"none\">\n        <RunningLine colors={this.state.colors}/>\n      </svg>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}